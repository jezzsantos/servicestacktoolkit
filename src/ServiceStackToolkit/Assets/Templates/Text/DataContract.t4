<#@ Template Inherits="NuPattern.Library.ModelElementTextTransformation" HostSpecific="True" Debug="False" #>
<#@ ModelElement Type="NuPattern.Runtime.IProductElement" Processor="ModelElementProcessor" #>
<#@ Assembly Name="NuPattern.Common.dll" #>
<#@ Assembly Name="NuPattern.Runtime.Extensibility.dll" #>
<#@ Import Namespace="NuPattern.Runtime" #>
<#@ Import Namespace="NuPattern.Runtime.ToolkitInterface" #>
<#@ Assembly Name="ServiceStackToolkit.Automation.dll" #>
<#@ Import Namespace="ServiceStackToolkit" #>
<#@ Import Namespace="System.Linq" #>
<#@ Output extension=".gen.cs" #>
<#
    var currentElement = (IProductElement)this.Element;
    var service = currentElement.As<IService>();
    var serviceNameSingular = service.ResourceNameSingular;
    var serviceNamePlural = service.ResourceNamePlural;
    var rootnamespace = service.Parent.Parent.RootNamespace;
#>
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace <#= rootnamespace #>.DataContracts
{
    /// <summary>
    /// Provides the <#= serviceNameSingular #> DTO
    /// </summary>
    public partial class <#= serviceNameSingular #> : I<#= serviceNameSingular #>
    {
<#
if (service.Resource.ResourceFields.Any())
{
#>
        /// <summary>
        /// Gets or sets the identifier of the <#= serviceNameSingular #>
        /// </summary>
        public string Id { get; set; }

<#
    foreach (var field in service.Resource.ResourceFields)
    {
        var description = ((!string.IsNullOrEmpty(field.Description)) ? field.Description : "the " + field.InstanceName).ToLowerInvariant();

#>
        /// <summary>
        /// Gets or sets <#= description #>
        /// </summary>
        public <#= field.DataType #> <#= field.InstanceName #> { get; set; }

<#
    }
}
#>
    }
}