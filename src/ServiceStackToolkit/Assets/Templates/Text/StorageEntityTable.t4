<#@ Template Inherits="NuPattern.Library.ModelElementTextTransformation" HostSpecific="True" Debug="False" #>
<#@ ModelElement Type="NuPattern.Runtime.IProductElement" Processor="ModelElementProcessor" #>
<#@ Assembly Name="NuPattern.Common.dll" #>
<#@ Assembly Name="NuPattern.Runtime.Extensibility.dll" #>
<#@ Import Namespace="NuPattern.Runtime" #>
<#@ Import Namespace="NuPattern.Runtime.ToolkitInterface" #>
<#@ Assembly Name="ServiceStackToolkit.Automation.dll" #>
<#@ Import Namespace="ServiceStackToolkit" #>
<#@ Import Namespace="ServiceStackToolkit.Automation" #>
<#@ Import Namespace="System.Linq" #>
<#@ Output extension=".gen.cs" #>
<#
    var currentElement = (IProductElement)this.Element;
    var service = currentElement.As<IService>();
    var serviceNameSingular = service.ResourceNameSingular;
    var serviceNamePlural = service.ResourceNamePlural;
    var rootnamespace = service.Parent.Parent.RootNamespace;
    var commonStorageNamespace = "MySolution.Storage";
#>
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using <#= rootnamespace #>.DataContracts;
using <#= commonStorageNamespace #>.Table;

namespace <#= rootnamespace #>.Storage.Table
{
    /// <summary>
    /// An azure storage table context for an <see cref="<#= serviceNameSingular #>" />.
    /// </summary>
    internal partial class <#= serviceNameSingular #>EntityTable : KeyedCloudTableContext<<#= serviceNameSingular #>Entity>
    {
        private const string EntityTableName = "<#= serviceNameSingular #>Entities";

        /// <summary>
        /// Creates a new instance of the <see cref="<#= serviceNameSingular #>EntityTable" /> class.
        /// </summary>
        public <#= serviceNameSingular #>EntityTable()
            : base(EntityTableName)
        {
        }
    }
}
