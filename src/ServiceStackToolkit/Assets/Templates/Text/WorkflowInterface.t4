<#@ Template Inherits="NuPattern.Library.ModelElementTextTransformation" HostSpecific="True" Debug="False" #>
<#@ ModelElement Type="NuPattern.Runtime.IProductElement" Processor="ModelElementProcessor" #>
<#@ Assembly Name="NuPattern.Common.dll" #>
<#@ Assembly Name="NuPattern.Runtime.Extensibility.dll" #>
<#@ Import Namespace="NuPattern.Runtime" #>
<#@ Import Namespace="NuPattern.Runtime.ToolkitInterface" #>
<#@ Assembly Name="ServiceStackToolkit.Automation.dll" #>
<#@ Import Namespace="ServiceStackToolkit" #>
<#@ Import Namespace="ServiceStackToolkit.Automation" #>
<#@ Import Namespace="System.Linq" #>
<#@ Output extension=".gen.cs" #>
<#
    var currentElement = (IProductElement)this.Element;
    var service = currentElement.As<IService>();
    var serviceNameSingular = service.ResourceNameSingular;
    var serviceNamePlural = service.ResourceNamePlural;
    var rootnamespace = service.Parent.Parent.RootNamespace;

    var managerClassName = serviceNamePlural + "Manager";
#>
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using ServiceStack.Web;
using <#= rootnamespace #>.MessageContracts;

namespace <#= rootnamespace #>.Workflow
{
    /// <summary>
    /// Defines the workflow manager for processing the '<#= serviceNamePlural #>' resource.
    /// </summary>
    internal partial interface I<#= managerClassName #>
    {
<#
foreach (var verb in service.Verbs)
{
#>
<#
    if (verb.IsTestingOnly)
    {
#>
#if DEBUG
<#
    }
#>
        /// <summary>
        /// Processes the <#= verb.RequestContract.ContractName #> request for the '<#= serviceNamePlural #>' resource.
        /// </summary>
        <#= verb.ResponseContract.ContractName #> <#= verb.InstanceName #><#= verb.VerbResourceName #>(IRequest request, <#= verb.RequestContract.ContractName #> body);

<#
    if (verb.IsTestingOnly)
    {
#>
#endif
<#
    }
#>
<#
}
#>
    }
}